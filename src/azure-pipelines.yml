trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - '/src/'

pr:
  branches:
    include:
      - master
  paths:
    include:
      - '/src/'

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - master
    always: true

resources:
  repositories:
  - repository: templates
    type: github
    name: osisoft/OSI-Samples
    endpoint: osisoft/OSI-Samples

variables:
  - template: '/miscellaneous/build_templates/variables.yml@templates'
  - name: projPath
    value: '/src/'
  - name: CredFile
    value: config.ini
  - name: CredFileLibraryOCS
    value: product-readiness.omf_temp_python.ocs.ini
  - name: CredFileLibraryEDS
    value: product-readiness.omf_temp_python.eds.ini
  - name: CredFileLibraryPI
    value: product-readiness.omf_temp_python.pi.ini
  - name: analysisProject
    value: OMF_Temp_Python

jobs:
  - job: Tests_OCS
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: '/miscellaneous/build_templates/config.yml@templates'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibraryOCS)
          filePath: $(projPath)

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          architecture: 'x64'

      - script: |
          echo Install tools
          pip install setuptools wheel
          pip install unittest-xml-reporting    
          pip install pytest
          pip install pytest-cov
          echo Install requirements
          pip install -r requirements.txt
          echo Run tests
          python -m pytest ./test.py --junitxml=junit/test-results.xml 
          echo Complete
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: 'Run tests'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          failTaskOnFailedTests: true
          testRunTitle: '$(Agent.JobName) on ubuntu-16.04'
        displayName: 'Publish test results'

  - job: Tests_EDS
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    steps:
      - template: '/miscellaneous/build_templates/config.yml@templates'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibraryEDS)
          filePath: $(projPath)

      - script: |
          "pip.exe" install -r requirements.txt
        workingDirectory: '$(Build.SourcesDirectory)$(projPath)'
        displayName: 'Install requirements'

      - script: |
          "pytest.exe"  --junitxml=junit/test-results.xml ./test.py
        workingDirectory: '$(Build.SourcesDirectory)$(projPath)'
        displayName: 'Run tests'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          failTaskOnFailedTests: true
          testRunTitle: '$(Agent.JobName) on $(buildAgent)'
        displayName: 'Publish test results'

  - job: Tests_PI
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    steps:
      - template: '/miscellaneous/build_templates/config.yml@templates'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibraryPI)
          filePath: $(projPath)

      - script: |
          "pip.exe" install -r requirements.txt
        workingDirectory: '$(Build.SourcesDirectory)$(projPath)'
        displayName: 'Install requirements'

      - script: |
          "pytest.exe" --junitxml=junit/test-results.xml ./test.py
        workingDirectory: '$(Build.SourcesDirectory)$(projPath)'
        displayName: 'Run tests'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          failTaskOnFailedTests: true
          testRunTitle: '$(Agent.JobName) on $(buildAgent)'
        displayName: 'Publish test results'

  - template: '/miscellaneous/build_templates/analysis.yml@templates'
    parameters:
      language: python
